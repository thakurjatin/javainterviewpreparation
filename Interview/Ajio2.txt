Input: arr[] = {1, 3, 5, 8, 9, 2, 6, 7, 6, 8, 9}
Output: 3 (1-> 3 -> 9 -> 9)


// find minimum jumps 

public int jumps(int arr[]){

2 loops
i and j

int size = arr.length;
int[] arr2 = new int(size);

for(int i=1; i< size; i++){
	
	for(int j = 0; j < i; j++){
  
  if(i <= j + arr[j]) {
  arr2[i] = Math.max(arr[i],arr[j])
  
  }
  
  }
}
return arr2[size-1];

}


Input: arr[] = [ 4 , 5 , 2 , 25 ]
Output:        4      –>   5
               5      –>   25
               2      –>   25
              25     –>   -1




public void findMax(int[] arr){

int maxValue = arr[0];
int minValue = arr[0];
for(int i=0; i < arr.length; i++){
	if(arr[i] > maxValue ){
  	maxValue = arr[i];
  }
  else{
  maxValue = -1;
  }
}
System.out.println(maxValue);

}